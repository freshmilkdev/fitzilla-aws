type Blog @model {
    id: ID!
    name: String!
    posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
}

type Post @model @key(name: "byBlog", fields: ["blogID"]) {
    id: ID!
    title: String!
    blogID: ID!
    blog: Blog @connection(fields: ["blogID"])
    comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
    id: ID!
    postID: ID!
    post: Post @connection(fields: ["postID"])
    content: String!
}


type MuscleGroup @model {
    id: ID!
    name: String!
    description: String
    exercises: [Exercise] @connection(keyName: "byMuscleGroup", fields: ["id"])
}

type Exercise @model
    @auth(rules: [{ allow: owner }])
    @key(name: "byMuscleGroup", fields: ["muscleGroupID"]) {
    id: ID!
    name: String!
    description: String
    videoUrl: String
    imageUrl: String
    muscleGroupID: ID!
    muscleGroup: MuscleGroup @connection(fields: ["muscleGroupID])
}

type MuscleGroup @model 
 @auth(rules: [{ allow: owner }])
{
    id: ID!
    name: String!
    description: String
    exercises: [Exercise] @connection(keyName: "byMuscleGroup", fields: ["id"])
}

type Exercise @model
    @auth(rules: [{ allow: owner }])
    @key(name: "byMuscleGroup", fields: ["muscleGroupID"]) {
    id: ID!
    name: String!
    description: String
    videoUrl: String
    imageUrl: String
    muscleGroupID: ID!
    muscleGroup: MuscleGroup @connection(fields: ["muscleGroupID"])
}